pipeline {
    agent any

    stages {
        stage('Get Code from Github') {
                steps {
                        checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/safaziedi/spring-boot-angular-postgresql']])
                    }
                }
        stage('Sonar Qube Analysis') {
            environment {
                SCANNER_HOME = tool 'scanner'
                PROJECT_KEY = "spring-boot-angular-postgresql"
            }
            steps {
                withSonarQubeEnv(installationName: 'sonarqube', credentialsId: 'sonar2')  {
                    // equivalent a : 
                    bat """
                        ${SCANNER_HOME}/bin/sonar-scanner.bat ^
                        -Dsonar.projectKey=${PROJECT_KEY} ^
                        -Dsonar.sources=back/src ^
                        -Dsonar.java.binaries=./back ^
                        -Dsonar.host.url=http://localhost:9000
                    """
                    // bat """mvn -f ./back/pom.xml clean package sonar:sonar ^
                    // -Dsonar.projectKey=${PROJECT_KEY} ^
                    // -Dsonar.host.url=http://localhost:9000"""
                }
            }
        }

        stage('Quality Gate'){
            steps {
                script{
                    timeout(time: 20, unit: 'MINUTES') {
                        def qg = waitForQualityGate()
                        if (qg.status != 'OK') {
                            echo "Pipeline aborted due to quality gate failure: ${qg.status}"
                        }
                    }
                }
            }
        }

        // stage('CD') {
        //     steps{
        //         echo 'Starting deployment..'
        //     }
        // }
    }
}