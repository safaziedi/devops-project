pipeline {
    agent any
    tools {
        nodejs 'nodejs-21.0.0'
        dockerTool 'docker'
    }
    stages {
        stage('Get Code from Github & clean workspace') {
                steps {
                        cleanWs()
                        checkout scmGit(branches: [[name: '*/develop']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/safaziedi/spring-boot-angular-postgresql']])
                    }
        }
        
        stage('Build Angular'){
            steps{
                dir('./front') {
                    sh 'npm install'
                    sh 'npm run build'
                }
            }
        }

        stage('Sonar Scanner') {
            steps{
                dir('./front') {
                    sh 'npm run sonar'
                }
            }
        }

        stage('Push To Nexus') {
            steps {
                dir('./front') {
                withCredentials([file(credentialsId: 'mynpm-cred', variable: 'mynpmrc')]) {
                    script{
                        sh "npm publish --userconfig ${mynpmrc} --loglevel verbose"
                    }
                }
            }
            }
        }
        stage('Create docker image'){
            steps{
                dir('./front') {
                script{
                    sh 'docker build -t ziadisafa/angular-15-crud:1.0.0 .'
                }
                }
            }
        }
        stage('Push to docker hub'){
            steps{
                script{
                    sh 'docker login -u ziadisafa --password safaziadi07012001'
                    sh 'docker push ziadisafa/angular-15-crud:1.0.0'
                    
                }
            }
        }

        stage('Deploy to K8s') {
            steps {
                dir('./front') {
                script {
                    kubernetesDeploy(configs: "deployementfrontend.yaml", kubeconfigId: "kubernetes")
                    }
                }
            }
        }
    }
}